	<table>
		<tr>
			<th> </th>
			<th>PARTIDO POPULAR (PP)</th>
			<th>PARTIDO SOCIALISTA OBRERO ESPAÃ‘OL (PSOE)</th>
			<th>IZQUIERDA UNIDA-LOS VERDES: LA IZQUIERDA PLURAL (IU-LV)</th>
		</tr>
		<tr>
			<td><b>Votes</b></td>
			<td>237785</td>
			<td>237785</td>
			<td>118892,5</td>
		</tr>
		<tr>
			<td>Seat 1</td>
			<td>185867</td>
			<td>185867</td>
			<td>92933,5</td>
		</tr>
		<tr>
			<td>Seat 2</td>
			<td>40360</td>
			<td>40360</td>
			<td>20180</td>
		</tr>
		<tr>
			<td>Seat 3</td>
			<td>40360</td>
			<td>40360</td>
			<td>20180</td>
		</tr>
		<tr>
			<td>Seat 4</td>
			<td>40360</td>
			<td>40360</td>
			<td>20180</td>
		</tr>
		<tr>
			<td>Seat 5</td>
			<td>40360</td>
			<td>40360</td>
			<td>20180</td>
		</tr>
		<tr>
			<td>Seat 6</td>
			<td>40360</td>
			<td>40360</td>
			<td>20180</td>
		</tr>
		<tr>
			<td>Seat 7</td>
			<td>40360</td>
			<td>40360</td>
			<td>20180</td>
		</tr>
		<tr>
			<td><b>Seats obtained</b></td>
			<td>4</td>
			<td>3</td>
			<td>0</td>
		</tr>
		<tr>
			<td>% votes</td>
			<td>46.26%</td>
			<td>36.16%</td>
			<td>7.85%</td>
		</tr>
		<tr>
			<td>% seats</td>
			<td>57.14%</td>
			<td>42.86%</td>
			<td>0%</td>
		</tr>
	</table>

</br>

	<%
		console.log("rendering table");
		console.log(models);

		var votes_state = { partial_results: [], seats_obtained:[], last_winner: -1}

		for(var i=0; i<models.length; i++){
				votes_state.partial_results.push(models[i].votes);
				votes_state.seats_obtained.push(0);
		}
	%>
		<table>
			<tr>
				<th> </th>
				<% for(var i=0; i<models.length; i++){ %>
					<th> <%= models[i].name %> (<%= models[i].acronym %>)</th>
				<% } %>
			</tr>

			<tr>
				<td><b>Votes</b></td>
				<% for(var i=0; i<votes_state.partial_results.length; i++){ %>
				<td><%= votes_state.partial_results[i] %></td>
				<% } %>
			</tr>

			<% for(var i=0; i<census.attributes.province_seats; i++){ %>
			<tr>
				<td>Seat <%= i+1 %></td>
				<%
					var winner = {value: -1, index: ""};
					console.log("Computing for Seat " + (i+1) + " ----->");
					for(var j=0; j<votes_state.partial_results.length; j++){

						//console.log(j);
						//console.log(votes_state.last_winner);
						//If this was the last winner, divide it by its coefficient X
						if(votes_state.last_winner == j){
							console.log("// calculating new value ---- ");
							//console.log(votes_state.partial_results[j]);
							//console.log(votes_state.seats_obtained[j]+1);
							votes_state.partial_results[j] =  models[j].votes/(votes_state.seats_obtained[j]+1);
							console.log(votes_state.partial_results[j]);
						}

						//Compare
						/**/
						if(winner.value < votes_state.partial_results[j] || winner.value == -1){
							winner.value = votes_state.partial_results[j];
							winner.index = j;
						}
					}

					votes_state.last_winner = winner.index;
					votes_state.seats_obtained[winner.index] += 1;

					//Update seat obtained
					console.log("// state of votes ---- ");
					console.log( winner);
					console.log( "last winner " + votes_state.last_winner );
					console.log( votes_state.partial_results );
					console.log("// seats gained ---- ");
					console.log(votes_state.seats_obtained)

					for(var j=0; j<votes_state.partial_results.length; j++){
						if(winner.index == j){
				%>
					<td><%= votes_state.partial_results[j] %> *</td>

				<% 		}else{ %>
					<td><%= votes_state.partial_results[j] %></td>
				<%
					}
				}
				%>
			</tr>
			<% } %>

			<tr>
				<td><b>Seats obtained</b></td>
				<% console.log(votes_state.seats_obtained);  for(var i=0; i<votes_state.seats_obtained.length; i++){ %>
					<td> <%= votes_state.seats_obtained[i] %></td>
					<% } %>
			</tr>
			<tr>
				<td>% votes</td>
				<% for(var i=0; i<models.length; i++){ %>
					<td> <%= models[i].percent_votes %></td>
				<% } %>
			</tr>
			<tr>
				<td>% seats</td>
				<% for(var i=0; i<models.length; i++){ %>
					<td> <%= models[i].percent_seats %></td>
				<% } %>
			</tr>

		</table>
